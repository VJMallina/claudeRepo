version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: saveinvest-postgres
    environment:
      POSTGRES_USER: saveinvest
      POSTGRES_PASSWORD: dev_password_change_in_prod
      POSTGRES_DB: saveinvest_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - saveinvest-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U saveinvest"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: saveinvest-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - saveinvest-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # API Service (will be uncommented after we create it)
  # api:
  #   build:
  #     context: ./services/api
  #     dockerfile: Dockerfile
  #   container_name: saveinvest-api
  #   environment:
  #     NODE_ENV: development
  #     DATABASE_URL: postgresql://saveinvest:dev_password_change_in_prod@postgres:5432/saveinvest_db
  #     REDIS_URL: redis://redis:6379
  #     JWT_SECRET: your-super-secret-jwt-key-change-in-prod
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   volumes:
  #     - ./services/api:/app
  #     - /app/node_modules
  #   networks:
  #     - saveinvest-network

volumes:
  postgres-data:
  redis-data:

networks:
  saveinvest-network:
    driver: bridge
